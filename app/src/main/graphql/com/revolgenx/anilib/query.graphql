
query MediaQuery($page: Int!
    , $perPage: Int!
    , $seasonYear: Int
    , $season: MediaSeason
    , $status: MediaStatus
    , $genre:String
    , $format: MediaFormat
    , $genre_in:[String]
    , $tag_in:[String]
    , $sort: [MediaSort]
    , $isAdult:Boolean  = false) {
    Page(page: $page, perPage: $perPage) {
        media(seasonYear: $seasonYear
            , season: $season
            , genre: $genre
            , format: $format
            , status: $status
            , genre_in: $genre_in
            , tag_in: $tag_in
            , sort: $sort
            , isAdult:$isAdult) {
            ... on Media{
                ... narrowMediaContent
            }
        }
    }
}




query MediaListEditorQuery($mediaId:Int,$userId:Int, $format:ScoreFormat){
    MediaList(mediaId:$mediaId, userId:$userId){
        ... mediaListContent
        score(format:$format)
    }
}

query MediaRecommendationQuery($mediaId:Int, $page:Int, $perPage:Int
    , $sort:[RecommendationSort] ){
    Media(id:$mediaId, isAdult:false){
        recommendations(page:$page, perPage:$perPage,sort:$sort){
            nodes{
                id
                rating
                userRating
                media{
                    id
                }
                mediaRecommendation{
                    id
                    format
                    type
                    episodes
                    chapters
                    status
                    seasonYear
                    title{
                        ... mediaTitle
                    }
                    coverImage{
                        ... mediaCoverImage
                    }
                    bannerImage
                    averageScore
                    isAdult
                }
            }
        }
    }
}

query MediaWatchQuery($mediaId:Int){
    Media(id:$mediaId){
        streamingEpisodes{
            title
            thumbnail
            url
            site
        }
    }
}

query MediaCharacterQuery(
    $page:Int,
    $perPage:Int,
    $mediaId:Int
    , $language:StaffLanguage){
    Media(id:$mediaId){
        characters(page:$page, perPage:$perPage, sort:[ROLE,ID]){
            edges{
                id
                role
                node{
                    id
                    name{
                        full
                    }
                    image{
                        large
                        medium
                    }
                    siteUrl
                }
                voiceActors(language:$language){
                    id
                    name{
                        full
                    }
                    image{
                        large
                        medium
                    }
                    language
                }

            }

        }
    }
}

query MediaStaffQuery($page:Int, $perPage:Int, $mediaId:Int){
    Media(id:$mediaId){
        staff(page:$page,perPage:$perPage){
            edges{
                role
                node{
                    id
                    name{
                        full
                    }
                    image{
                        large
                        medium
                    }
                }
            }
        }
    }
}

query MediaReviewQuery($mediaId:Int, $page:Int, $perPage:Int){
    Media(id:$mediaId){
        reviews(page:$page,perPage:$perPage,sort:[RATING_DESC]){
            edges{
                node{
                    id
                    summary
                    userRating
                    rating
                    ratingAmount
                    user{
                        id
                        avatar{
                            large
                            medium
                        }
                    }
                }
            }
        }
    }
}

query MediaStatsQuery($mediaId:Int){
    Media(id:$mediaId){
        rankings{
            id
            rank
            type
            year
            allTime
            context
            season
        }

        trends(page:1, perPage:7,sort:[DATE_DESC]){
            nodes{
                date
                trending
            }
        }

        stats{
            statusDistribution{
                amount
                status
            }
        }
        stats{
            scoreDistribution{
                score
                amount
            }
        }
    }
}


query BrowseSimpleMediaQuery($mediaId:Int){
    Media(id:$mediaId){
        id
        title {
            ... mediaTitle
        }
        coverImage {
            ... on MediaCoverImage{
                medium
                large
                extraLarge
            }
        }
        mediaListEntry{
            status
        }
        bannerImage
    }
}

query MediaInQuery($idIn:[Int]){
    Media(id_in:$idIn){
        id
        title {
            romaji
        }
        coverImage {
            ... mediaCoverImage
        }
        type
        averageScore
        bannerImage
    }
}

query MediaOverViewQuery($mediaId:Int){
    Media(id:$mediaId){
        id
        title {
            ... mediaTitle
        }

        nextAiringEpisode{
            id
            timeUntilAiring
            episode
        }

        isAdult
        format
        type
        genres
        status
        averageScore
        meanScore
        chapters
        volumes
        popularity
        favourites
        episodes
        duration
        season
        seasonYear
        description(asHtml:true)
        chapters
        volumes
        source
        hashtag
        relations{
            edges{
                relationType(version:2)
                node{
                    id
                    title{
                        ... mediaTitle
                    }
                    coverImage{
                        ... mediaCoverImage
                    }
                    bannerImage
                    type
                    seasonYear
                    format
                    status
                    averageScore
                }
            }
        }
        externalLinks{
            id
            url
            site
        }
        tags{
            name
            isMediaSpoiler
        }
        startDate {
            ... fuzzyDate
        }
        endDate{
            ... fuzzyDate
        }
        trailer{
            id
            site
            thumbnail
        }
        studios{
            edges{
                node{
                    id
                    name
                    isAnimationStudio
                }
            }
        }
    }
}

query CharacterQuery($characterId:Int){
    Character(id:$characterId){
        id
        name{
            full
            native
            alternative
        }
        image{
            large
            medium
        }
        isFavourite
        siteUrl
        favourites
        description(asHtml:true)
    }
}

query CharacterMediaQuery($characterId:Int, $page:Int, $perPage:Int){
    Character(id:$characterId){
        media(page:$page, perPage:$perPage){
            nodes{
                id
                averageScore
                coverImage{
                    large
                    extraLarge
                }
                title{
                    romaji
                    english
                    native
                    userPreferred
                }
                bannerImage
                format
                type
                season
                status
                seasonYear
            }
        }
    }
}

query CharacterActorQuery($characterId:Int ){
    Character(id:$characterId){
        media(sort:[ID_DESC]){
            edges{
                id
                node{
                    id
                }
                voiceActors(sort:[LANGUAGE]){
                    id
                    name{
                        full
                    }
                    image{
                        large
                        medium
                    }
                    language
                }
            }
        }
    }
}


query StaffQuery($id:Int){
    Staff(id:$id){
        id
        name{
            full
            native
            alternative
        }
        image{
            large
            medium
        }
        description(asHtml:true)
        favourites
        language
        isFavourite
        siteUrl
    }
}

query StaffCharacterMediaQuery($staffId:Int, $page:Int, $perPage:Int){
    Staff(id:$staffId){
        characters(page:$page,perPage:$perPage){
            nodes{
                id
                name{
                    full
                }
                image{
                    large
                    medium
                }


                media{
                    edges{
                        characterRole
                        node{
                            id
                            title{
                                romaji
                                english
                                native
                                userPreferred
                            }
                            averageScore
                            coverImage{
                                medium
                                large
                                extraLarge
                            }
                            bannerImage
                            isAdult
                            status
                            format
                            type
                            seasonYear
                        }
                    }
                }
            }
        }
    }
}

query StaffMediaRoleQuery($staffId:Int,$page:Int,$perPage:Int){
    Staff(id:$staffId){
        staffMedia(page:$page,perPage:$perPage){
            edges{
                node{
                    id
                    title{
                        romaji
                        english
                        native
                        userPreferred
                    }
                    coverImage{
                        extraLarge
                        large
                        medium
                    }
                    bannerImage
                    status
                    type
                    format
                    averageScore
                    seasonYear
                    isAdult
                }
                staffRole
            }
        }
    }
}

query StudioQuery($studioId:Int){
    Studio(id:$studioId){
        id
        name
        isFavourite
        favourites
        siteUrl
    }
}

query StudioMediaQuery($studioId:Int,$page:Int, $perPage:Int){
    Studio(id:$studioId){
        media(page:$page,perPage:$perPage){
            nodes{
                id
                title{
                    romaji
                    english
                    native
                    userPreferred
                }
                coverImage{
                    extraLarge
                    large
                    medium
                }
                isAdult
                averageScore
                bannerImage
                format
                seasonYear
                type
                status
            }
        }
    }
}


query MediaSearchQuery($search:String, $page:Int, $perPage:Int
    ,$type:MediaType,
    ,$format:MediaFormat
    ,$season:MediaSeason
    ,$seasonYear:Int
    ,$yearGreater:FuzzyDateInt
    ,$yearLesser:FuzzyDateInt
    ,$status:MediaStatus
    ,$source:MediaSource
    ,$streamingOn:[String]
    ,$genre:[String]
    ,$tag:[String]
    ,$sort:[MediaSort]
    ,$country:CountryCode){
    Page(page:$page,perPage:$perPage){
        media(search:$search
            , type:$type
            , format:$format
            , season:$season
            , seasonYear:$seasonYear
            , startDate_greater:$yearGreater
            , startDate_lesser:$yearLesser
            , status:$status
            , source:$source
            , licensedBy_in:$streamingOn
            , genre_in:$genre
            , tag_in:$tag
            , sort:$sort
            , countryOfOrigin:$country
            , isAdult:false){
            id
            title{
                romaji
                english
                native
                userPreferred
            }
            coverImage{
                extraLarge
                large
                medium
            }
            bannerImage
            averageScore
            type
            format
            status
            season
            seasonYear
        }
    }
}

query CharacterSearchQuery($search:String, $page:Int, $perPage:Int){
    Page(page:$page,perPage:$perPage){
        characters(search:$search, sort:[FAVOURITES_DESC]){
            ... narrowCharacterContent
        }
    }
}

query StaffSearchQuery($search:String, $page:Int, $perPage:Int){
    Page(page:$page, perPage:$perPage){
        staff(search:$search, sort:[FAVOURITES_DESC]){
            ... narrowStaffContent
        }
    }
}

query StudioSearchQuery($search:String, $page:Int, $perPage:Int){
    Page(page:$page, perPage:$perPage){

        studios(search:$search, sort:[FAVOURITES_DESC]){
            ... studioContent
        }

    }
}

query RecommendationQuery($page:Int, $perPage:Int, $onList:Boolean, $sort:[RecommendationSort]){
    Page(page:$page, perPage:$perPage){
        recommendations(onList:$onList, sort:$sort){
            id
            rating
            userRating
            media{
                ... commonMediaContent
            }
            mediaRecommendation{
                ... commonMediaContent
            }
        }
    }
}


query MediaListCollectinoQuery(
    $userId:Int,
    $userName:String,
    $type:MediaType,
    $status:MediaListStatus,
    $includeEpisode:Boolean!,
    $includeChapter:Boolean!
){
    #Laevatein
    MediaListCollection(
        userId:$userId
        , userName:$userName
        , type:$type
        , status:$status
    ){
        lists{
            entries{
                id
                score
                progress
                user{
                    mediaListOptions{
                        scoreFormat
                    }
                }
                media{
                    id
                    title{
                        userPreferred
                    }
                    coverImage{
                        large
                    }
                    format
                    status
                    genres
                    isAdult
                    episodes @include(if:$includeEpisode)
                    chapters @include(if:$includeChapter)
                }
            }
        }
    }
}


query BasicUserQuery($id:Int){
    User(id:$id){
        id
        name
        avatar{
            medium
            large
        }
        bannerImage
        mediaListOptions{
            scoreFormat
        }
    }
}

query UserProfileQuery($name:String, $id:Int){
    User(name:$name, id:$id){
        id
        name
        about(asHtml:true)
        avatar{
            medium
            large
        }
        bannerImage
        isFollowing
        isFollower
        isBlocked
        siteUrl
        statistics{
            anime{
                count
                minutesWatched
                meanScore
                genres{
                    count
                    genre
                }

            }
            manga{
                count
                chaptersRead
                meanScore

                genres{
                    count
                    genre
                }
            }
        }
    }
}

query UserTotalFollowersQuery($id:Int!){
    Page{
        pageInfo{
            total
        }
        followers(userId:$id){
            __typename
        }
    }
}

query UserTotalFollowingQuery($id:Int!){
    Page{
        pageInfo{
            total
        }
        following(userId:$id){
            __typename
        }
    }
}

query UserFollowersQuery($id:Int!, $page:Int, $perPage:Int){
    Page(page:$page, perPage:$perPage){
        followers(userId:$id){
            id
            name
            avatar{
                medium
            }
        }
    }
}

query UserFollowingQuery($id:Int!, $page:Int, $perPage:Int){
    Page(page:$page, perPage:$perPage){
        following(userId:$id){
            id
            name
            avatar{
                medium
            }
        }
    }
}

query UserFavouriteQuery($page:Int, $perPage:Int, $id:Int, $name:String,
    $includeAnime:Boolean!,
    $includeManga:Boolean!,
    $includeCharacter:Boolean!,
    $includeStaff:Boolean!,
    $includeStudio:Boolean!)  {
    User(id:$id, name:$name){
        favourites{
            anime(page:$page,perPage:$perPage) @include(if:$includeAnime){
                nodes{
                    ... on Media{
                        ... commonMediaContent
                    }
                }
            }
            manga(page:$page,perPage:$perPage) @include(if:$includeManga){
                nodes{
                    ... on Media{
                        ... commonMediaContent
                    }
                }
            }
            characters(page:$page,perPage:$perPage) @include(if:$includeCharacter){
                nodes{
                    ... on Character{
                        ... narrowCharacterContent
                    }
                }
            }
            staff(page:$page,perPage:$perPage) @include(if:$includeStaff){
                nodes{
                    ... on Staff{
                        ... narrowStaffContent
                    }
                }
            }
            studios(page:$page,perPage:$perPage) @include(if:$includeStudio){
                nodes{
                    ... on Studio{
                        ... studioContent
                    }
                }
            }
        }
    }
}

query StatsOverviewQuery($id:Int, $name:String,$includeAnime:Boolean!){
    User(id:$id, name:$name){
        mediaListOptions{
            scoreFormat
        }
        statistics{
            anime@include(if:$includeAnime){
                count
                meanScore
                standardDeviation
                minutesWatched
                episodesWatched
                statuses{
                    count
                    meanScore
                    status
                    minutesWatched
                }
                scores(sort:[MEAN_SCORE]){
                    count
                    score
                    meanScore
                    minutesWatched
                }

                formats{
                    count
                    meanScore
                    minutesWatched
                    format
                }

                countries{
                    count
                    meanScore
                    minutesWatched
                    country
                }

                releaseYears{
                    count
                    meanScore
                    minutesWatched
                    releaseYear
                }

                startYears{
                    count
                    meanScore
                    minutesWatched
                    startYear
                }
            }

            manga @skip(if:$includeAnime){
                count
                meanScore
                standardDeviation

                chaptersRead
                volumesRead

                statuses{
                    count
                    meanScore
                    status
                    minutesWatched
                }
                scores(sort:[MEAN_SCORE]){
                    count
                    score
                    meanScore
                    minutesWatched
                }

                formats{
                    count
                    meanScore
                    minutesWatched
                    format
                }

                countries{
                    count
                    meanScore
                    minutesWatched
                    country
                }

                releaseYears{
                    count
                    meanScore
                    minutesWatched
                    releaseYear
                }

                startYears{
                    count
                    meanScore
                    minutesWatched
                    startYear
                }
            }
        }
    }
}


query UserStatsQuery($id:Int
    , $name:String
    , $sort:[UserStatisticsSort]
    , $includeAnime:Boolean = false
    , $includeManga:Boolean = false
    , $includeTag:Boolean = false
    , $includeGenre:Boolean = false
    , $includeStudio:Boolean = false
    , $includeStaff:Boolean = false
    , $includeVoiceActor:Boolean = false){
    User(id:$id, name:$name){
        statistics{
            anime @include(if:$includeAnime){
                genres(sort:$sort) @include(if:$includeGenre){
                    count
                    #mediaIds
                    genre
                    minutesWatched
                    meanScore
                }
                tags(sort:$sort) @include(if:$includeTag){
                    count
                    tag{
                        id
                        name
                    }
                    minutesWatched
                    meanScore
                }
                studios(sort:$sort)  @include(if:$includeStudio){
                    count
                    studio{
                        id
                        name
                    }
                    minutesWatched
                    meanScore
                }

                voiceActors(sort:$sort) @include(if:$includeVoiceActor){
                    count
                    meanScore
                    minutesWatched
                    voiceActor{
                        id
                        name{
                            full
                        }

                        image{
                            large
                            medium
                        }
                    }
                }

                staff(sort:$sort) @include(if:$includeStaff){
                    count
                    meanScore
                    minutesWatched
                    staff{
                        id
                        name{
                            full
                        }

                        image{
                            large
                            medium
                        }
                    }
                }
            }

            manga @include(if:$includeManga){
                genres(sort:$sort) @include(if:$includeGenre){
                    count
                    #mediaIds
                    genre
                    chaptersRead
                    meanScore
                }
                tags(sort:$sort) @include(if:$includeTag){
                    count
                    tag{
                        id
                        name
                    }
                    chaptersRead
                    meanScore
                }
                staff(sort:$sort) @include(if:$includeStaff){
                    count
                    meanScore
                    chaptersRead
                    staff{
                        id
                        name{
                            full
                        }

                        image{
                            large
                            medium
                        }
                    }
                }
            }
        }
    }
}

query IsFavouriteQuery($mediaId:Int){
    Media(id:$mediaId){
        isFavourite
    }
}

query NotificationQuery($page:Int, $perPage:Int, $resetNotificationCount:Boolean){
    Page(page:$page, perPage:$perPage){
        notifications(resetNotificationCount:$resetNotificationCount){
            __typename
            ... on AiringNotification{
                id
                type
                episode
                contexts
                createdAt
                media{
                    ... on Media{
                        ... basicMediaContent
                    }

                }

            }
            ... on FollowingNotification{
                id
                context
                type
                createdAt
                user{
                    ... on User{
                        ... notificationUserContent
                    }

                }

            }


            ...  on ActivityMessageNotification{
                id
                type
                activityId
                context
                message{
                    id
                    message
                    siteUrl
                }
                createdAt
                user{
                    ... on User{
                        ... notificationUserContent
                    }
                }
            }
            ... on ActivityMentionNotification{
                id
                type
                activityId
                context
                createdAt
                activity{
                    ... notificationActivity
                }
                user{
                    ... on User{
                        ... notificationUserContent
                    }
                }
            }
            ... on ActivityReplyNotification{
                id
                type
                activityId
                context
                createdAt

                activity{
                    ... notificationActivity
                }
                user{
                    ... on User{
                        ... notificationUserContent
                    }
                }
            }
            ... on ActivityReplySubscribedNotification{
                id
                type
                activityId
                context
                createdAt

                activity{
                    ... notificationActivity
                }
                user{
                    ... on User{
                        ... notificationUserContent
                    }
                }
            }
            ... on ActivityLikeNotification{
                id
                userId
                type
                activityId
                context
                createdAt
                activity{
                    ... notificationActivity
                }
                user{
                    ... on User{
                        ... notificationUserContent
                    }
                }
            }
            ... on ActivityReplyLikeNotification{
                id
                userId
                type
                activityId
                context
                createdAt
                activity{
                    ... notificationActivity
                }
                user{
                    ... on User{
                        ... notificationUserContent
                    }
                }
            }

            ... on ThreadCommentMentionNotification{
                id
                type
                context
                createdAt
                comment{
                    id
                    siteUrl
                }

                thread{
                    ... on Thread{
                        ... basicThreadContent
                    }
                }
                user{
                    ... on User{
                        ... notificationUserContent
                    }
                }
            }

            ... on ThreadCommentReplyNotification{
                id
                type
                context
                createdAt
                comment{
                    id
                    siteUrl
                }
                thread{
                    ... on Thread{
                        ... basicThreadContent
                    }
                }
                user{
                    ... on User{
                        ... notificationUserContent
                    }
                }

            }


            ... on ThreadCommentSubscribedNotification{
                id
                context
                comment{
                    id
                    siteUrl
                }
                type
                createdAt
                user{
                    ... on User{
                        ... notificationUserContent
                    }
                }
                thread{
                    ... on Thread{
                        ... basicThreadContent
                    }
                }
            }

            ... on ThreadCommentLikeNotification{
                id
                type
                context
                createdAt
                comment{
                    id
                    siteUrl
                }
                thread{
                    ... on Thread{
                        ... basicThreadContent
                    }
                }
                user{
                    ... on User{
                        ... notificationUserContent
                    }
                }
            }

            ... on ThreadLikeNotification{
                id
                type
                context
                createdAt
                thread{
                    ... on Thread{
                        ... basicThreadContent
                    }
                }
                user{
                    ... on User{
                        ... notificationUserContent
                    }
                }
            }

            ... on RelatedMediaAdditionNotification{
                id
                type
                context
                createdAt
                media{
                    ... on Media{
                        ... basicMediaContent
                    }

                }
            }
        }
    }
}

query  AiringScheduleQuery($page:Int
    , $perPage:Int
    , $notYetAired:Boolean
    , $airingAtGreater:Int,
    , $airingAtLesser:Int,
    $sort: [AiringSort]){
    Page(page:$page, perPage:$perPage){
        airingSchedules(notYetAired:$notYetAired
            , airingAt_greater:$airingAtGreater
            , airingAt_lesser:$airingAtLesser
            , sort:$sort){
            id
            airingAt
            timeUntilAiring
            episode
            media{
                ... narrowMediaContent

            }
        }
    }
}

query ReviewQuery($reviewId:Int, $mediaId:Int, $userId:Int){
    Review(id:$reviewId,mediaId:$mediaId,userId:$userId){
        id
        userId
        mediaId
        summary
        body(asHtml:true)
        rating
        ratingAmount
        score
        private
        userRating
        createdAt
        user{
            id
            name
            avatar{
                large
                medium
            }
        }
        media{
            id
            title{
                ... mediaTitle
            }
            coverImage{
                ... mediaCoverImage
            }
            type
            bannerImage
        }
    }
}

query AllReviewQuery($page:Int, $perPage:Int, $sort:[ReviewSort]){
    Page(page:$page, perPage:$perPage){
        reviews(sort:$sort){
            id
            summary
            rating
            ratingAmount
            score
            createdAt
            user{
                id
                name
                avatar{
                    large
                    medium
                }
            }
            media{
                id
                title{
                    ... mediaTitle
                }
                coverImage{
                    ... mediaCoverImage
                }
                type
                bannerImage
                isAdult
            }
        }
    }
}


#mutation
mutation SaveMediaListEntryMutation(
    $listId:Int, $mediaId:Int,
    $status:MediaListStatus,
    $score:Float,
    $progress:Int,
    $progressVolumes:Int,
    $private_:Boolean,
    $repeat:Int,
    $notes:String,
    $startedAt:FuzzyDateInput,
    $completedAt:FuzzyDateInput
){
    SaveMediaListEntry(id:$listId, mediaId:$mediaId
        , status:$status
        , score:$score
        , progress:$progress
        , progressVolumes:$progressVolumes
        ,repeat:$repeat
        ,private:$private_
        ,startedAt:$startedAt,completedAt:$completedAt, notes:$notes){
        id
        progress
        progressVolumes
    }
}


mutation UpdateRecommendationMutation($mediaId:Int, $mediaRecommendationId:Int, $rating:RecommendationRating){
    SaveRecommendation(mediaId:$mediaId, mediaRecommendationId:$mediaRecommendationId, rating:$rating){
        id
        userRating
        rating
    }
}

mutation SaveRecommendationMutation($mediaId:Int, $mediaRecommendationId:Int, $rating:RecommendationRating){
    SaveRecommendation(mediaId:$mediaId, mediaRecommendationId:$mediaRecommendationId, rating:$rating){
        id
        rating
        userRating
        media{
            id
        }
        mediaRecommendation{
            title{
                english
                romaji
                english
            }
            averageScore
        }
    }
}

mutation DeleteMediaListEntryMutation($listId:Int){
    DeleteMediaListEntry(id:$listId){
        deleted
    }
}


mutation ToggleFavouriteMutation($animeId:Int,$mangaId:Int, $characterId:Int
    ,$staffId:Int, $studioId:Int){
    ToggleFavourite(animeId:$animeId, mangaId:$mangaId, characterId:$characterId, staffId:$staffId, studioId:$studioId){
        anime{
            __typename
            nodes{
                isFavourite
            }
        }
        manga{
            __typename
            nodes{
                isFavourite
            }
        }
        characters{
            __typename
            nodes{
                isFavourite
            }
        }
        staff{
            __typename
            nodes{
                isFavourite
            }
        }
        studios{
            __typename
            nodes{
                isFavourite
            }
        }
    }
}

mutation ToggleFollowMutation($userId:Int){
    ToggleFollow(userId:$userId){
        id
        isFollowing
    }
}


mutation DeleteReviewMutation($reviewId:Int){
    DeleteReview(id:$reviewId){
        deleted
    }
}

mutation SaveReviewMutation(
    $reviewId:Int,
    $mediaId:Int,
    $body:String,
    $summary:String,
    $score:Int,
    $private_:Boolean
){
    SaveReview(
        id:$reviewId,
        mediaId:$mediaId,
        body:$body,
        summary:$summary,
        score:$score,
        private:$private_){
        id
    }
}

mutation RateReviewMutation($reviewId:Int, $rating:ReviewRating){
    RateReview(reviewId:$reviewId, rating:$rating){
        id
        userRating
        rating
        ratingAmount
    }
}


fragment mediaListContent on MediaList{
    id
    mediaId
    userId
    status
    progress
    progressVolumes
    repeat
    private
    notes
    startedAt {
        year
        month
        day
    }
    completedAt {
        year
        month
        day
    }
}

fragment narrowMediaContent on Media{
    id
    title {
        ... on MediaTitle{
            english
            romaji
            native
            userPreferred
        }
    }
    isAdult
    format
    type
    genres
    status
    averageScore
    episodes
    chapters
    volumes
    duration
    startDate {
        ... on FuzzyDate{
            year
            month
            day
        }
    }
    endDate{
        ... on FuzzyDate{
            year
            month
            day
        }
    }
    coverImage {
        ... on MediaCoverImage{
            medium
            large
            extraLarge
        }
    }
    bannerImage
    mediaListEntry{
        progress
    }
}



fragment fuzzyDate on FuzzyDate{
    year
    month
    day
}

fragment mediaTitle on MediaTitle{
    english
    romaji
    native
    userPreferred
}

fragment mediaCoverImage on MediaCoverImage{
    medium
    large
    extraLarge
}


fragment commonMediaContent on Media{
    id
    coverImage{
        ... mediaCoverImage
    }
    title{
        ... mediaTitle
    }
    averageScore
    bannerImage
    type
    format
    status
    seasonYear
    isAdult
}


fragment studioContent on Studio{
    id
    name
    isAnimationStudio
    media(page:1, perPage:8, sort:[POPULARITY_DESC]){
        nodes{
            ... commonMediaContent
        }
    }
}

fragment narrowStaffContent on Staff{
    id
    name{
        full
    }
    image{
        large
        medium
    }
}

fragment narrowCharacterContent on Character{
    id
    name{
        full
    }
    image{
        large
        medium
    }
}


fragment notificationUserContent on User{
    id
    name
    avatar{
        medium
        large
    }
    bannerImage
}

fragment basicMediaContent on Media{
    id
    title {
        ... mediaTitle
    }
    isAdult
    format
    type
    coverImage {
        ... mediaCoverImage
    }
    bannerImage
}


fragment basicThreadContent on Thread{
    id
    title
    siteUrl
}


fragment notificationActivity on ActivityUnion{
    ... on TextActivity{
        id
        siteUrl
    }
    ... on ListActivity{
        id
        siteUrl
    }
    ... on MessageActivity{
        id
        siteUrl
    }
}














