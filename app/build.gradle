plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "org.jetbrains.kotlin.plugin.serialization"
    id "com.apollographql.apollo3" version "3.7.3"
}

android {
    namespace "com.revolgenx.anilib"
    compileSdk 33

    defaultConfig {
        applicationId "com.revolgenx.anilib"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField(
                "String",
                "API_URL",
                "\"https://graphql.anilist.co\""
        )
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    buildTypes {
        debug{
            applicationIdSuffix ".debug"
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        alpha{
            initWith debug
            applicationIdSuffix ".alpha"
        }
    }

    flavorDimensions.add("default")
    productFlavors {
        production {
            dimension "default"
        }
        develop {
            resConfigs "en", "xxhdpi"
            dimension "default"
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        languageVersion = "1.8"
    }

    buildFeatures {
        compose true
        buildConfig = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.4.0"
    }
    kotlin {
        sourceSets.all {
            languageSettings{
                enableLanguageFeature("DataObjects")
            }
        }
    }
    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
    lint {
        disable "MissingTranslation", "ExtraTranslation"
        abortOnError = false
        checkReleaseBuilds = false
    }
}

ext{
    compose = "1.4.0-alpha04"
    material = "1.1.0-alpha04"
    accompanist = "0.29.0-alpha"
    voyager = "1.0.0-rc03"
    timber = "5.0.1"
    koin = "3.3.2"
    koinCompose = "3.4.1"
    desugar = "1.1.5"
    landscapist = "2.1.2"
    paging = "3.2.0-alpha03"
    pagingCompose = "1.0.0-alpha17"
    dataStore = "1.0.0"
}

dependencies {

    implementation("androidx.core:core-ktx:1.9.0")

    implementation("androidx.activity:activity-compose:1.6.1")

    //compose
    implementation("androidx.compose.ui:ui:$compose")
    implementation("androidx.compose.ui:ui-tooling-preview:$compose")
    implementation("androidx.compose.foundation:foundation:$compose")

    //material
    implementation("androidx.compose.material3:material3:$material")

    //accompanist
    implementation("com.google.accompanist:accompanist-systemuicontroller:$accompanist")

    //voyager
    implementation("cafe.adriel.voyager:voyager-navigator:$voyager")
    implementation("cafe.adriel.voyager:voyager-tab-navigator:$voyager")
    implementation("cafe.adriel.voyager:voyager-androidx:$voyager")
    implementation "cafe.adriel.voyager:voyager-bottom-sheet-navigator:$voyager"

    //koin
    implementation("io.insert-koin:koin-android:$koin")
    implementation "io.insert-koin:koin-androidx-compose:$koinCompose"


    //apollo
    implementation("com.apollographql.apollo3:apollo-runtime:3.7.3")
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")

    //paging
    implementation("androidx.paging:paging-runtime:$paging")
    implementation("androidx.paging:paging-compose:$pagingCompose")

    //timber
    implementation("com.jakewharton.timber:timber:$timber")

    //desugar
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:$desugar")


    //landscapist
    implementation("com.github.skydoves:landscapist-fresco:$landscapist")
    implementation("com.github.skydoves:landscapist-fresco-websupport:$landscapist")

    //kotlin-serialization
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'

    //dataStore
    implementation "androidx.datastore:datastore:$dataStore"


    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")

    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$compose")
    debugImplementation("androidx.compose.ui:ui-tooling:$compose")
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose")
}


apollo {
    service("anilist") {
        packageName.set("com.revolgenx.anilib")
    }
}
