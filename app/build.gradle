plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "org.jetbrains.kotlin.plugin.serialization"
    id "com.apollographql.apollo3" version "3.7.3"
    id 'kotlin-parcelize'
}

android {
    namespace "com.revolgenx.anilib"
    compileSdk 34

    defaultConfig {
        applicationId "com.revolgenx.anilib"
        minSdk 21
        targetSdk 33
        versionCode 41
        versionName "2.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField "String", "CLIENT_ID", '"anilist_client_id"'
        buildConfigField "String", "REDIRECT_URI", '"anilist_redirect_uri"'
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true

            if (rootProject.file("secret.debug.properties").exists()) {
                def secretProps = new Properties()
                secretProps.load(new FileInputStream(rootProject.file("secret.debug.properties")))
                buildConfigField "String", "CLIENT_ID", secretProps['client_id']
                buildConfigField "String", "REDIRECT_URI", secretProps['redirect_uri']
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"

            if (rootProject.file("secret.properties").exists()) {
                def secretProps = new Properties()
                secretProps.load(new FileInputStream(rootProject.file("secret.properties")))
                buildConfigField "String", "CLIENT_ID", secretProps['client_id']
                buildConfigField "String", "REDIRECT_URI", secretProps['redirect_uri']
            }
        }
        alpha {
            initWith debug
            applicationIdSuffix ".alpha"
        }
    }

    flavorDimensions.add("default")
    productFlavors {
        production {
            dimension "default"
        }
        develop {
            resourceConfigurations += ['en', 'xxhdpi']
            dimension "default"
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        languageVersion = "1.8"
    }

    buildFeatures {
        compose true
        buildConfig = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.4.0"
    }
    kotlin {
        sourceSets.all {
            languageSettings {
                enableLanguageFeature("DataObjects")
            }
        }
    }
    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
    lint {
        disable "MissingTranslation", "ExtraTranslation"
        abortOnError = false
        checkReleaseBuilds = false
    }
}

ext {
    composeUi = "1.5.0"
    material = "1.2.0-alpha07"
    voyager = "1.0.0-rc05"
    timber = "5.0.1"
    koin = "3.4.1"
    coil = "2.4.0"
    desugar = "1.1.5"
    paging = "3.2.0"
    dataStore = "1.0.0"
    markwon = "4.6.2"
    sheets = "1.1.1"
    customTabs = "1.6.0"
    jwtdecode = "2.0.2"
    prettytime = "5.0.4.Final"
    vico = "1.7.1"
    splashscreen = "1.1.0-alpha02"
}

dependencies {

    implementation("androidx.core:core-ktx:1.12.0")

    implementation("androidx.activity:activity-compose:1.8.0-beta01")

    //compose
    implementation("androidx.compose.ui:ui-tooling-preview:$composeUi")

    //material
    implementation("androidx.compose.material3:material3:$material")

    //voyager
    implementation("cafe.adriel.voyager:voyager-navigator:$voyager")
    implementation("cafe.adriel.voyager:voyager-tab-navigator:$voyager")
    implementation("cafe.adriel.voyager:voyager-androidx:$voyager")

    //koin
    implementation("io.insert-koin:koin-android:$koin")
    implementation "io.insert-koin:koin-androidx-compose:$koin"
    implementation "io.insert-koin:koin-androidx-workmanager:$koin"


    //apollo
    implementation("com.apollographql.apollo3:apollo-runtime:3.7.3")
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")

    //paging
    implementation("androidx.paging:paging-runtime:$paging")
    implementation("androidx.paging:paging-compose:$paging")

    //timber
    implementation("com.jakewharton.timber:timber:$timber")

    //desugar
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:$desugar")


    //coil
    implementation("io.coil-kt:coil-compose:$coil")
    implementation("io.coil-kt:coil-gif:$coil")

    //kotlin-serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1")

    //dataStore
    implementation "androidx.datastore:datastore:$dataStore"
    implementation("androidx.datastore:datastore-preferences:$dataStore")

    //splashscreen
    implementation("androidx.core:core-splashscreen:$splashscreen")

    //markwon
    implementation("io.noties.markwon:core:$markwon")
    implementation("io.noties.markwon:html:$markwon")
    implementation("io.noties.markwon:editor:$markwon")
    implementation("io.noties.markwon:ext-strikethrough:$markwon")
    implementation("io.noties.markwon:linkify:$markwon")
    implementation("io.noties.markwon:inline-parser:$markwon")
    implementation("io.noties.markwon:simple-ext:$markwon")

    //eventbus
    implementation("org.greenrobot:eventbus:3.3.1")


    //sheets
    implementation "com.maxkeppeler.sheets-compose-dialogs:core:$sheets"
    implementation "com.maxkeppeler.sheets-compose-dialogs:calendar:$sheets"

    //browser
    implementation("androidx.browser:browser:$customTabs")


    //jwtdecode
    implementation("com.auth0.android:jwtdecode:$jwtdecode")

    //pretty time
    implementation("org.ocpsoft.prettytime:prettytime:$prettytime")

    //chart
    implementation "com.patrykandpatrick.vico:core:$vico"
    implementation "com.patrykandpatrick.vico:compose:$vico"
    implementation "com.patrykandpatrick.vico:compose-m3:$vico"


    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")

    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$composeUi")
    debugImplementation("androidx.compose.ui:ui-tooling:$composeUi")
    debugImplementation("androidx.compose.ui:ui-test-manifest:$composeUi")
}


apollo {
    service("anilist") {
        packageName.set("com.revolgenx.anilib")
    }
}
